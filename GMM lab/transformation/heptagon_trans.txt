#include <stdio.h>
#include <GL/glut.h>
#include <math.h>

GLfloat pivot_X = 100, pivot_Y = 200;

GLfloat V1X = 0.0f+pivot_X, V1Y = 180.0f+pivot_Y, V1Z = 0.0f;
GLfloat V2X = 100.0f+pivot_X, V2Y = 180.0f+pivot_Y, V2Z = 0.0f;
GLfloat V3X = 100.0f+pivot_X, V3Y = 70.0f+pivot_Y, V3Z = 0.0f;
GLfloat V4X = 0.0f+pivot_X, V4Y = 70.0f+pivot_Y, V4Z = 0.0f;
GLfloat V5X = 50.0f+pivot_X, V5Y = 250.0f+pivot_Y, V5Z = 0.0f;
GLfloat V6X = 50.0f+pivot_X, V6Y = 0.0f+pivot_Y, V6Z = 0.0f;

GLfloat X = ((V1X+V2X+V3X+V4X+V5X+V6X)/5)-62.0, Y=((V1Y+V2Y+V3Y+V4Y+V5Y+V6Y)/5)-124.0; //center

void myInit () {
	glClear (GL_COLOR_BUFFER_BIT);
    glClearColor (0.0, 0.0, 0.0, 0.0);
    glColor3f (2.0f, 0.5f, 0.5f);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D (-500, 500, -500, 500);
    
    glBegin (GL_LINE_LOOP);
    	glVertex3f (-400.0, 0.0, 0.0);
    	glVertex3f (400.0, 0.0, 0.0);
    glEnd ();
    
    glBegin (GL_LINE_LOOP);
    	glVertex3f (0.0, -400.0, 0.0);
    	glVertex3f (0.0, 400.0, 0.0);
    glEnd ();
    
    glFlush ();
}

void drawHexagon() {
    glBegin (GL_LINE_LOOP);
    	glVertex3f (V1X, V1Y, V1Z);
    	glVertex3f (V5X, V5Y, V5Z);
    	glVertex3f (V2X, V2Y, V2Z);
    	glVertex3f (V3X, V3Y, V3Z);
    	glVertex3f (V6X, V6Y, V6Z);
    	glVertex3f (V4X, V4Y, V4Z);
    glEnd ();
    glFlush ();
}

void drawPivot(){
	glPointSize(10.0f);
	glBegin (GL_POINTS);
		glColor3f(5.0f,5.0f,0.0f);
		glVertex2d(X, Y);
	glEnd ();
	glFlush();
}

void transformTranslate (float xaxis, float yaxis, float zaxis) {
	glColor3f (5.0f, 5.0f, 0.0f);
	glTranslatef(xaxis, yaxis, zaxis);
	drawHexagon();
}

void transformRotate (float deg, float xaxis, float yaxis, float zaxis) {
	glColor3f (0.0f, 1.0f, 0.0f);
	glTranslatef(X,Y, 0.0);
	glRotatef (deg, xaxis, yaxis, zaxis);
	glTranslatef(-X,-Y, 0.0);
	glColor3f (0.0f, 1.0f, 0.0f);
	drawHexagon();
}

void transformScale (float xaxis, float yaxis, float zaxis) {
	glColor3f(0.0f, 5.0f, 0.0f);
	glTranslatef(X,Y, 0.0);
	glScalef(xaxis, yaxis, zaxis);
	glTranslatef(-X,-Y, 0.0);
	drawHexagon();
}

void myDisplay () {
	glColor3f (1.0, 5.0, 1.0);
	drawHexagon();
//	drawPivot();
    printf ("Translation");
	transformTranslate (-X, -Y, 0.0);
	printf ("Rotation");
	transformRotate (90.0, 0.0, 0.0, 1.0);
	printf ("Scaling");
	transformScale (0.5, 0.5, 0.0);
	printf ("Translation");
	transformTranslate (0.0, 0.0, 0.0);
	transformTranslate (2*Y, -2*X, 0.0);
}
  	
int main (int argc, char **argv) {
    glutInit (&argc, argv);
    glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
    glutInitWindowPosition (0, 0);
    glutInitWindowSize (900, 900);
    glutCreateWindow ("2D TRANSFORMATION OVER THE HEXAGON");
    glutDisplayFunc (myDisplay);
    myInit ();
    glutMainLoop ();
    return 0;
}

// b