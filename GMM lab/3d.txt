#include <GL/glut.h>
#include <math.h>

float angle = 0.0;

void display() {
   glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

   glMatrixMode(GL_MODELVIEW);
   glLoadIdentity();

   gluLookAt(0.0, 0.0, 5.0,  // Eye position
             0.0, 0.0, 0.0,  // Look-at point
             0.0, 1.0, 0.0); // Up direction

   glRotatef(angle, 1.0, 1.0, 1.0); // Rotate around (1, 1, 1)

   glBegin(GL_POLYGON);
      glColor3f(1.0, 0.0, 0.0); glVertex3f(0.0, 0.6, 0.0);
      glColor3f(0.0, 1.0, 0.0); glVertex3f(-0.5, 0.3, 0.0);
      glColor3f(0.0, 0.0, 1.0); glVertex3f(-0.5, -0.3, 0.0);
      glColor3f(1.0, 1.0, 0.0); glVertex3f(0.0, -0.6, 0.0);
      glColor3f(1.0, 0.0, 1.0); glVertex3f(0.5, -0.3, 0.0);
      glColor3f(0.0, 1.0, 1.0); glVertex3f(0.5, 0.3, 0.0);
   glEnd();

   glFlush();
   glutSwapBuffers();
}

void reshape(int width, int height) {
   glViewport(0, 0, width, height);
   glMatrixMode(GL_PROJECTION);
   glLoadIdentity();
   gluPerspective(60.0, (float)width / (float)height, 1.0, 100.0);
}

void timer(int value) {
   angle += 1.0;
   glutPostRedisplay();
   glutTimerFunc(16, timer, 0);
}

int main(int argc, char** argv) {
   glutInit(&argc, argv);
   glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
   glutInitWindowSize(500, 500);
   glutCreateWindow("3D Hexagon");
   glutDisplayFunc(display);
   glutReshapeFunc(reshape);
   glEnable(GL_DEPTH_TEST);
   glutTimerFunc(0, timer, 0);
   glutMainLoop();
   return 0;
}

