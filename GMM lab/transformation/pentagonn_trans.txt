#include <iostream>
#include <GL/glut.h>
using namespace std;
GLfloat px, py, Rotation;
GLfloat ax, ay, bx, by, cx, cy, dx, dy, ex, ey;
void myinit (void) {
glClear (GL_COLOR_BUFFER_BIT);
glClearColor (0.0, 0.0, 0.0, 0.0);
glMatrixMode (GL_PROJECTION);
glLoadIdentity ();
gluOrtho2D (-500, 500, -500, 500);
}
void drawPent () {
glBegin (GL_LINE_LOOP);
glVertex2f (ax, ay);
glVertex2f (bx, by);
glVertex2f (cx, cy);
glVertex2f (dx, dy);
glVertex2f (ex, ey);
glEnd ();
glFlush();
}
void drawPoint () {
glBegin (GL_POINTS);
glVertex2f (px, py);
glEnd();
glFlush();
}
void drawQuadrants () {
glPointSize (3.0);
glColor3f (0.0f, 0.5f, 0.5f);
glBegin (GL_LINE_LOOP);
glVertex3f (-500.0, 0.0, 0.0);
glVertex3f (500.0, 0.0, 0.0);
glEnd ();
glBegin (GL_LINE_LOOP);
glVertex3f (0.0, -500.0, 0.0);
glVertex3f (0.0, 500.0, 0.0);
glEnd ();
}
void display () {
drawQuadrants ();
// Original Points
ax = 100.0, ay = 250.0, bx = 50.0, by = 200.0, cx = 75.0, cy = 150.0;
dx = 125.0, dy = 150.0, ex = 150.0, ey = 200.0;
// Pivot Points
px = 100.0, py = 200.0;
drawPoint();
glColor3f (1.0f, 1.0f, 1.0f);
drawPent ();
// 1. Translate object to origin from its original position
GLfloat midX, midY;
midX = (ax + bx + cx + dx + ex) / 5.0;
midY = (ay + by + cy + dy + ey) / 5.0;
glColor3f (0.0f, 1.0f, 0.0f);
glTranslatef (-midX, -midY, 0.0);
glTranslatef (midX-px, midY-py, 0.0);
drawPent ();
// 2. Rotate the object about the origin
Rotation = -90;
glColor3f (1.0f, 0.0f, 0.0f);
glTranslatef (px, py, 0.0f);
glRotatef (Rotation, 0.0f, 0.0f, 1.0f);
glTranslatef (-px, -py, 0.0f);
drawPent ();
// 3. Scale the object
glColor3f (1.0f, 1.0f, 0.0f);
glTranslatef (px, py, 0.0f);
glScalef(0.5, 0.5, 1);
glTranslatef (-px, -py, 0.0f);
drawPent();
// 4. Translate the object to its original position from origin.
glColor3f (0.0f, 0.0f, 1.0f);
glTranslatef (px, py, 0.0f);
glRotatef (-Rotation, 0.0f, 0.0f, 1.0f);
// glScalef(2, 2, 1);
// glTranslatef (-px, -py, 0.0f);
glTranslatef (px-midX, py-midY, 0.0);
glTranslatef (midX, midY, 0.0);
drawPent ();
// 5. Shift the pivot element
px -= 100, py -= 100;
glColor3f (1.0f, 0.0f, 1.0f);
drawPoint();
glFlush ();
}
int main (int argc, char **argv) {
glutInit (&argc, argv);
glutInitWindowSize (1000, 1000);
glutInitWindowPosition (500, 0);
glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
glutCreateWindow ("2d transformation of pentagon");
myinit ();
glutDisplayFunc (display);
glutMainLoop ();
return 0;
}
