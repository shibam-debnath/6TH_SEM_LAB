#include <GL/glut.h>
void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT);
    glBegin(GL_LINES);
    glColor3f(1.0f, 0.2f, 0.2f);
    glVertex2f(-200.0, 0.0);
    glVertex2f(200.0, 0.0);
    glVertex2f(0.0, -200.0);
    glVertex2f(0.0, 200.0);
    glEnd();
    glColor3f(1.0f, 0.2f, 0.2f);
    int xc = 20, yc = 20, r = 100; // center and radius of the circle
    glBegin(GL_POINTS);            // use points to draw the circle
    int x = 0, y = r;              // initialize the starting point
    float d = 1.25 - r;            // initial decision parameter
    while (x <= y)
    {
        glVertex2i(xc + x, yc + y); // draw a point in the first octant
        glVertex2i(xc + y, yc + x); // draw a point in the second octant
        glVertex2i(xc - x, yc + y); // draw a point in the eighth octant
        glVertex2i(xc - y, yc + x); // draw a point in the seventh octant
        glVertex2i(xc - x, yc - y); // draw a point in the fourth octant
        glVertex2i(xc - y, yc - x); // draw a point in the fifth octant
        glVertex2i(xc + x, yc - y); // draw a point in the third octant
        glVertex2i(xc + y, yc - x); // draw a point in the sixth octant
        x++;                        // move to the next x
        if (d < 0)
        {
            d += 2 * x + 1; // update the decision parameter
        }
        else
        {
            y--;                  // move to the next y
            d += 2 * (x - y) + 1; // update the decision parameter
        }
    }
    glEnd(); // end drawing
    glFlush();
}
void init(void)
{
    glClearColor(0.0, 0.0, 0.0, 1.0); // set the clear color to white
    glColor3f(0.0, 1.0, 0.0);         // set the drawing color to black
    gluOrtho2D(-200, 200, -200, 200); // set the coordinate system
}
int main(int argc, char **argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Mid-Point Circle Drawing Algorithm");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}